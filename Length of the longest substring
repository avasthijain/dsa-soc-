class Solution {
  public:
    int longestUniqueSubstring(string &s) {
        int n = s.length();
        int cur_len = 1; 
        int max_len = 1; 
        int prev_index;  
        int i;
        int visited[26];

        for (i = 0; i < 26; i++)
            visited[i] = -1;
        visited[s[0] - 'a'] = 0;

        for (i = 1; i < n; i++) {
            prev_index = visited[s[i] - 'a'];

            if (prev_index == -1 || i - cur_len > prev_index)
                cur_len++;

            else {
                if (cur_len > max_len)
                    max_len = cur_len;

                cur_len = i - prev_index;
            }

            visited[s[i] - 'a'] = i;
        }

        if (cur_len > max_len)
            max_len = cur_len;
        return max_len;
    }
};
